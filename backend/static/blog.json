{
  "swagger": "2.0",
  "info": {
    "title": "Blog API",
    "version": "1.0.0"
  },
  "servers": [{ "url": "http://localhost:5001" }],
  "tags": [{ "name": "Post", "description": "Post API - CRUD" }],
    "paths": {
    "/api/posts": {
      "get": {
        "summary": "Returns all posts",
        "description": "Returns a JSON file containing the list of blog posts. Optionally, it can sort the list of posts according to the specified attribute and direction.",
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "enum": ["title", "content"],
            "description": "The attribute to sort by (title or content)."
          },
          {
            "name": "direction",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "description": "The direction to sort (ascending or descending)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "title": { "type": "string" },
                  "content": { "type": "string" }
                }
              }
            }
          },
          "400": {
            "description": "Invalid sort or direction parameter",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string" }
              }
            }
          }
        }
      },
            "post": {
        "summary": "Creates a new blog entry",
        "description": "Creates a new blog entry. Expects both title and content. If these are specified, the new post will be returned or an error if the input is invalid.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "content"],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Sample Post Title"
                },
                "content": {
                  "type": "string",
                  "example": "This is the content of the sample post."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "title": { "type": "string" },
                "content": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Invalid input, title and content are required",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string" }
              }
            }
          }
        }
      }
    },
          "/api/posts/{id}": {
      "delete": {
        "summary": "Deletes a blog post",
        "description": "Deletes a post based on the ID specified in the URL. If the post exists, it is deleted, if it does not exist, an error message is returned.",
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a blog post",
        "description": "Updates an existing blog post with a new title or content.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to be updated"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string", "example": "Updated Post Title" },
                "content": { "type": "string", "example": "Updated content of the post." }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          }
        }
      }
    },
          "/api/posts/search": {
      "get": {
        "summary": "Search for posts by title or content",
        "description": "Searches for posts based on their title or content. Displays an error message if no search parameters are specified or if no matches are found.",
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "description": "Title of the post to search for"
          },
          {
            "name": "content",
            "in": "query",
            "type": "string",
            "description": "Content of the post to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "title": { "type": "string" },
                  "content": { "type": "string" }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, no search parameters provided",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "No posts found with the specified title or content",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          }
        }
      }
    }
  }
}